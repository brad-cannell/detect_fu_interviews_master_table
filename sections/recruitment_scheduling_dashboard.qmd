---
title: Recruitment and Scheduling Dashboard
format: dashboard
orientation: columns
---

<!-- ## Load packages -->
```{r}
library(dplyr)
library(ggplot2)
library(flextable)
library(officer)
library(here)

# Import the data that will be used to create the tables.
soc_demo_path <- here::here("data", "cleaned_rds_files", 
                            "sociodemographic_information_import.rds")
soc_demo <- readRDS(soc_demo_path)

participant_path <- here::here("data", "cleaned_rds_files", 
                               "participant_import.rds")
participant <- readRDS(participant_path)

consent_path <- here::here("data", "cleaned_rds_files", "consent_import.rds")
consent <- readRDS(consent_path)

# Import function that will merge unique ID to data set
source(here::here("R", "merge_unique_id_to_detect_data_set.R"))  

```

<!-- ## Add unique ID column to data sets -->
```{r}
#| echo: false

# Participant 
participant <- merge_id(participant)

# Sociodemographic Information
soc_demo <- merge_id(soc_demo)

# Consent
consent <- merge_id(consent)
```

<!-- ## The number of follow-up interviews completed.-->
## Column {width="25%" .fill}
<!-- ## The number of follow-up interviews completed (if they gave consent, then they count).-->

```{r}
#| echo: false
#| title: Follow Up Interviews
#| content: valuebox

# (Based on the code in the "check_consenting participants file, only MedStar IDs with consent should be counted whether or not they are in the consent dataset.)

# Identify participants that gave consent
consented <- consent %>% filter(consent_given == 1) %>% select(medstar_id) %>% 
  unique() %>% nrow()

list(
  icon = "check2-circle",
  color = "vb-blue",
  value = consented
)
```

```{r}
#| echo: false
#| title: Unique Participants
#| content: valuebox

unique <- consent %>% filter(consent_given == 1) %>% select(unique_id) %>% 
  unique() %>% nrow()

list(
  icon = "person",
  color = "vb-red",
  value = unique
)
```
## Column {width="75%" .fill}
```{r}
#| include: false
visits <- consent %>% 
  filter(consent_given == 1) %>%
  select(unique_id, medstar_id) %>% unique() %>%
  group_by(unique_id) %>%
  mutate(
    # Column that gives count of rows for each unique_id
    visit_count = n()
  ) %>%
  ungroup() %>%
  select(unique_id, visit_count) %>%
  unique() %>% 
  group_by(visit_count) %>%
  reframe(
    visit_count,
    n = n(),
    n_percent = paste0(format(round((n()/nrow(.))*100, digits = 2), nsmall = 2), 
                       " %")
  ) %>%
  unique() %>% 
  arrange(visit_count)
```

```{r}
#| echo: false
#| title: Number of Follow-up Interviews Completed per Person
flextable(visits) %>%
  set_header_labels(
    visit_count = "N of Interviews",
    n = "N of Participants",
    n_percent = "N % of Participants "
  ) %>%
  theme_zebra(
    odd_header = "transparent",
    odd_body = "#f5f5f5",
    even_header = "transparent",
    even_body = "transparent"
  ) %>%
  align(align = "left", part = "body") %>%
   align(align = "left", part = "header") %>%
  width(width = 4, unit = "in")

```







