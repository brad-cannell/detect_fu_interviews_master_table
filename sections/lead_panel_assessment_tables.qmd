---
always_allow_html: yes
---

# LEAD Panel Assessment

This page contains tables that summarize the LEAD Assessment Panel Data. The first table summarizes the data without grouping the rows by MedStar ID while the second table provides a summary of abuse determination for each unique MedStar ID.

## Methods

LEAD panels were provided a presentation detailing the voting process and definitions for the various sub types of elder mistreatment prior to convening and then a total of 3 votes occurred per individual abuse case.

### Initial Assessment

At each discussion, a research staff member presented a brief clinical description of each patient to LEAD panel members. Following this description, LEAD panel members were given further time to review the corresponding case materials. Members were then instructed to cast an initial ballot to document their assessment of the global presence of elder mistreatment (“Yes abuse", “No abuse", “Unable to determine”). After the first vote was completed, individuals reported to the group their assessment on the presence or absence of EM. If complete agreement was present among members (i.e., all members voting “Yes” or “No”), then consensus was reached and panel members would wait for the research staff member to present the next case, and the process would restart. 

### Secondary Assessment

If one or more panel members voted differently than the other members on the global presence of abuse, panel members were asked to discuss their interpretations of the clinical data presented to them. Members then were instructed to cast another vote using the method previously discussed for vote 1. After vote 2, determination of the LEAD panel for the presence or absence of elder mistreatment was made by a simple majority vote. For example, if at least 3 panel members (out of 5) indicated that no abuse was present at vote 2, then LEAD panel determination was classified as “No abuse” present for that case. If there was no majority, such as in the event that 2 members voted “Yes abuse”, 2 members voted “No abuse”, and 1 member voted “Unable to determine”, then that case was classified as “Unable to Determine”.

### Post-DETECT Assessment

A research staff member would then present a previously redacted overall results from a Structured Social and Behavioral Evaluation (SSBE) of the participant. LEAD panel members were then instructed to cast a third vote. Following Vote 3, individuals were then asked to document the types of abuse present (“Physical”, “Psychological”, “Financial", “Sexual", and “Neglect”). This vote reflects the decision by the LEAD panel members after all relevant information is available to them. For each abuse type, the final classification (i.e., “Yes", “No", “Unable to Determine”) was made using an identical method to that described above for determining global abuse status after vote 2.

```{r}
#| include: false
library(haven)
library(freqtables)
library(flextable)
library(officer)
library(tibble)
library(officer)
library(readr)
library(purrr)
library(stringr)
library(lubridate)
library(ggplot2)
library(dplyr, warn.conflicts = FALSE)
library(knitr)
library(tidyverse)



# Import function that will be used to add shade to the table by variable name
source("../R/add_shade_column.R")

# Import the data that will be used to create the tables.
detect_fu_merge  <- readRDS("../data/cleaned_rds_files/detect_fu_data_merged.rds")

# Import functions that will be used to calculate statistics

# Function specific to LEAD Panel Assessment Data
source("../R/lead_positive_votes_analysis.R")

# Generate unique person datasets and summary table
source("../R/unique_case_count.R")

# Filter out the lead panel df from the merged df
source("../R/extract_df_from_merged_detect.R")

# Generate the data frame that will be used for creating a confusion matrix
source("../R/final_abuse_determination_initial_abuse_detect_tool.R")



# Overall - Continuous columns
source("../R/n_mean_ci.R")
source("../R/n_median_ci.R")
source("../R/cont_stats.R")

# Overall - Categorical columns
source("../R/n_percent_ci.R")

# By group - Continuous columns
source("../R/n_mean_ci_grouped.R")
source("../R/n_median_ci_grouped.R")
source("../R/cont_stats_grouped.R")

# By group - Categorical columns
source("../R/n_percent_ci_grouped.R")
```

<!-- # Analysis -->

<!-- Make a variable name key -->

```{r}
#| echo: false

lead_desc <- tribble(
 ~var, ~description,
 "physical_abuse_det", "LEAD Assessment physical abuse determination based on majority vote.",
 "sexual_abuse_det", "LEAD Assessment sexual abuse determination based on majority vote.",
 "emotional_psycho_abuse_det", "LEAD Assessment emotional/ psychological abuse determination based on majority vote.",
 "neglect_det", "LEAD Assessment neglect determination based on majority vote.",
 "self_neglect_det", "LEAD Assessment self-neglect determination based on majority vote.",
 "financial_exploitation_det", "LEAD Assessment financial exploitation determination based on majority vote.",
 "abandonment_det", "LEAD Assessment abandonment determination based on majority vote.",
 "physical_abuse_any", "At least one LEAD panelist voted 'Yes' for physical abuse.",
 "sexual_abuse_any", "At least one LEAD panelist voted 'Yes' for sexual abuse.",
 "emotional_psycho_abuse_any", "At least one LEAD panelist voted 'Yes' for emotional/ psychological abuse.",
 "neglect_any", "At least one LEAD panelist voted 'Yes' for neglect.",
 "self_neglect_any", "At least one LEAD panelist voted 'Yes' for self-neglect.",
 "financial_exploitation_any", "At least one LEAD panelist voted 'Yes' for financial exploitation.",
 "abandonment_any", "At least one LEAD panelist voted  'Yes' for abandonment.",
 "abuse_any", "There is a positive LEAD Panel Assessment abuse determination based on majority vote for any abuse type."
)

```

## Summary Statistics for LEAD Panel Assessment Positive Votes
```{r}
#| echo: false
# Extract lead Panel data from merged data frame
lpa <- filter_merged_df(detect_fu_merge, "_lpa")

# Extract detect tool data from merged dataframe
detect_tool <- filter_merged_df(detect_fu_merge, "_par") %>% select(c(medstar_id, ends_with("_5cat_f")))
```

```{r}
#| echo: false
# Generate positive vote summary columns for each Medstar ID
lead_sum <- pos_votes(lpa)

# Separate rows in final determination data frame from the rest
final_det <- lead_sum %>% filter(final_determination == 1)
lead_pos_votes <- lead_sum %>% filter(final_determination == 0)
```

### Initial MedStar Medic DETECT Tool Abuse Determination vs LEAD Panel Assessment Final Determination

The DETECT tool determination was counted as positive if the value of any of the detect tool variables was 'Yes' while the LEAD Panel Assessment was counted as positive if the final determination value was 'Yes' for any of the abuse types.

```{r, echo = FALSE}
# Create confusion matrix flextable

lead_tool <- compare_det(final_det, detect_tool)

# Format the flextable
conf_mat <- lead_tool[[1]] %>% 
  border_remove() %>%
  bg(part = "body", i = 1, j = 2, bg = "#8cc0ae") %>%
  bg(part = "body", i = 2, j = 3, bg = "#8cc0ae") %>%
  bg(part = "body", i = 2, j = 2, bg = "#9dcfbc") %>%
  bg(part = "body", i = 1, j = 3, bg = "#9dcfbc") %>%
  color(j = c(2,3), i = c(1,2), color = "white") %>%
  bold(j = 1, part = "header") %>%
  bold(i = 1, j = 2, part = "header") %>%  
  bold(i = c(1,2), j = c(2,3)) %>%
  height(i = c(1,2), height = 1.5, unit = "in") %>%
  hrule(rule = "exact") %>%
  width(j = -c(1,4), width = 1.5, unit = "in") %>%
  align(align = "center") %>%
  align(j = 1, align = "right") %>%
  valign(valign = c("center")) %>%
  vline(j = 3, border = fp_border(color = "black")) %>%
  hline(i = 2, border = fp_border(color = "black")) %>%
  flextable::compose(j = 1, value = as_paragraph("Detect Tool"), part = "header") %>%
  flextable::compose(i = 1, j = 2, value = as_paragraph("LEAD Panel Assessment"), part = "header") 

conf_mat
```


```{r, echo = FALSE, ft.align="left"}

conf_calc <- lead_tool[[2]] %>% t() %>% as.data.frame() %>% rownames_to_column() %>% 
  flextable() %>%
  delete_part(part = "header") %>%
  hline_top() %>%
  hline_bottom() %>%
  bold(j = 1) %>%
  width(width = 1, unit = "in")
 

conf_calc
```


### Unique Medstar ID Summary

```{r}
#| echo: false
unique_case_table <- unique_case(lpa, medstar_id, assessment_type_3cat_f)
```

```{r, echo = FALSE}
# Create flextable
unique_case_flextable <- flextable(unique_case_table) %>%
  # Rename columns
  set_header_labels(
    assessment_type_3cat_f = "Assessment",
    unique_id_count = "Unique ID Count",
    unique_id_proportion = "Unique ID Proportion of Total") %>%
  
  # Shade alternating rows using zebra theme
  theme_zebra(
    odd_header = "transparent",
    odd_body = "#f1f1f1",
    even_header = "transparent",
    even_body = "transparent"
  ) %>%
  
  # Set header alignment
  align(align = "left", part = "header") %>%
  
  # Set table width and alignment
  width(width = 4.8, unit = 'in') %>%
  align(align = "left") 
  
unique_case_flextable
```

### Final LEAD Panel Assessment Abuse Determination

The final abuse determination is the result of the majority vote of the secondary assessment (if one was done) or initial assessment (if a secondary assessment wasn't done). 

```{r}
#| echo: false
final_det_cols <- c("physical_abuse_det", "sexual_abuse_det",  "emotional_psycho_abuse_det",  "neglect_det",  "self_neglect_det",  "financial_exploitation_det",  "abandonment_det", "abuse_any")
```

<!-- ## Create a data frame that contains summary statistics -->

```{r}
#| echo: false
final_det_stats_list <- final_det_cols |>
  rlang::set_names(final_det_cols) |> 
  purrr::map(~ n_percent_ci(final_det, !! rlang::sym(.x), 1))
```

```{r}
#| echo: false
final_det_table <- purrr::map_dfr(
  # Bind rows together
  .x = final_det_cols,
  .f = ~ dplyr::bind_rows(final_det_stats_list[[.x]])
)

# Reorder the columns so that `cat` comes after `var`
final_det_table <- final_det_table |> 
  dplyr::select(var, cat, everything())


# Add description column 
final_det_table <- final_det_table %>%
  left_join(., lead_desc, by = c("var"))

# Re-order rows alphabetically
final_det_table <- final_det_table %>%     
  arrange(var) %>%
    # Move any_abuse rows to the end of the df
    arrange(., var == "abuse_any")
```

```{r}
#| echo: false
# Split data frame into list of data frames by variable
final_det_table_list <- split(final_det_table, final_det_table$var)

```

```{r, include = FALSE}
# Create flextable
cat_flextable_4 <- function(var_name, table_list) {
  # Extract each variable data frame from list 
  df <- data.frame(table_list[[var_name]])
  
  # Set up table header line text including variable name and description
  title_cap <- as_paragraph(var_name)
  desc_cap <- df %>% select(description) %>% unique() %>% toString() %>% as_paragraph()
  format_border <- fp_border(color = "black")
    
    # Create flextable
    flex_tab <- flextable(df, col_keys = c("var", "cat", "n", "formatted_stats")) %>%
      # Rename columns
      set_header_labels(
        var = "Variable", 
        cat = "Category", 
        "n" = "N",
        "formatted_stats" = "Percent of N (95% CI)") %>%
      
      # Shade alternating rows
      bg(i = ~ cat == "No", 
         bg = ("transparent"), 
         part = "body") %>%
      bg(i = ~ cat == "Yes", 
         bg = ("#f1f1f1"), 
         part = "body") %>%
      
      # Format Header lines
      add_header_lines(desc_cap) %>%
      add_header_lines(title_cap) %>%
      bg(bg = "transparent", part = "header", i = c(1,2)) %>%
      bold(i = 1, bold = TRUE, part = "header") %>%
      align(align = "left", part = "header") %>%
      # Add border lines to header
      border_remove() %>%
       surround(i = c(2,3), part = "header", border.bottom = format_border) %>%
      
      # Set width and alignment
      width(width = 4.8, unit = "in") %>%
      align(align = "left") %>%
      # add space for website view
      add_footer_lines("")
    
    flex_tab
}
```

```{r, results ='asis', echo=FALSE}
final_det_flex <- lapply(final_det_cols, cat_flextable_4, table_list = final_det_table_list)

for (x in 1:length(final_det_cols)) {
  cat(knit_print(final_det_flex[[x]]))
  }
```

### LEAD Panel Assessment Determination Based on Majority Vote

<!-- ## Create list of columns to analyze -->

```{r}
#| echo: false
maj_det_cols <- c("physical_abuse_det", "sexual_abuse_det",  "emotional_psycho_abuse_det",  "neglect_det",  "self_neglect_det",  "financial_exploitation_det",  "abandonment_det", "abuse_any")
```

<!-- ## Create a data frame that contains summary statistics -->

```{r}
#| echo: false
maj_det_stats_list <- maj_det_cols  |> 
  rlang::set_names(maj_det_cols) |> 
  purrr::map(
      ~ lead_pos_votes |> 
          filter(!is.na(assessment_type_3cat_f)) |> 
          n_percent_ci_grouped(!! rlang::sym(.x), assessment_type_3cat_f, 1)
      )
```

```{r}
#| echo: false
maj_det_table <- purrr::map_dfr(
  # Bind rows together
  .x = maj_det_cols,
  .f = ~ dplyr::bind_rows(maj_det_stats_list[[.x]])
)

# Reorder the columns so that `cat` comes after `var`
maj_det_table <- maj_det_table |> 
  dplyr::select(var, cat, everything())


# Add description column 
maj_det_table <- maj_det_table %>%
  left_join(., lead_desc, by = c("var"))

# Move statistics for each assessment type to its own row
assessments <- c("Initial", "Secondary", "Post-detect")
maj_det_table_long <- data.frame()

for (assessment in assessments) {
  single_type <- maj_det_table %>%
    select(-c(ends_with(" assessment") & !contains(assessment))) %>%
    # Create new column for assessment type
    mutate(
      assessment_type = paste(assessment, "assessment", sep = " ")
    ) %>%
    relocate(assessment_type, .after = cat) %>%
    # Rename columns
    rename(
      "n" = 4,
      "formatted_stats" = 5
    )
  maj_det_table_long <- rbind(maj_det_table_long, single_type) %>%
    arrange(var) %>%
    # Move any_abuse rows to the end of the df
    arrange(., var == "abuse_any")
}

maj_det_table <- maj_det_table_long
```

```{r}
#| echo: false
# Split data frame into list of data frames by variable
maj_det_table_list <- split(maj_det_table, maj_det_table$var)

```


```{r, include = FALSE}
# Create flextable
cat_flextable <- function(var_name, table_list) {
  # Extract each variable data frame from list 
  df <- data.frame(table_list[[var_name]])
  
  # Set up table header line text including variable name and description
  title_cap <- as_paragraph(var_name)
  desc_cap <- df %>% select(description) %>% unique() %>% toString() %>% as_paragraph()
  format_border <- fp_border(color = "black")
    
    # Create flextable
    flex_tab <- flextable(df, col_keys = c("var", "cat", "assessment_type", "n", "formatted_stats")) %>%
      # Rename columns
      set_header_labels(
        var = "Variable", 
        cat = "Category", 
        assessment_type = "Assessment Type",
        "n" = "N",
        "formatted_stats" = "Percent of N (95% CI)") %>%
      
      # Shade alternating rows
      bg(i = ~ assessment_type == "Initial assessment", 
         bg = ("transparent"), 
         part = "body") %>%
      bg(i = ~ assessment_type == "Secondary assessment", 
         bg = ("#f1f1f1"), 
         part = "body") %>%
      bg(i = ~ assessment_type == "Post-detect assessment", 
         bg = ("transparent"), 
         part = "body") %>%
      
      # Format Header lines
      add_header_lines(desc_cap) %>%
      add_header_lines(title_cap) %>%
      bg(bg = "transparent", part = "header", i = c(1,2)) %>%
      bold(i = 1, bold = TRUE, part = "header") %>%
      align(align = "left", part = "header") %>%
      # Add border lines to header
      border_remove() %>%
       surround(i = c(2,3), part = "header", border.bottom = format_border) %>%
      
      # Set width and alignment
      width(j = c(1,2,3,4,5), width = c(2, 1.2, 2, 1.2, 2), unit = "in") %>%
      align(align = "left") %>%
      # add space for website view
      add_footer_lines("")
    
    flex_tab
}
```

```{r, results ='asis', echo=FALSE}
maj_det_flex <- lapply(maj_det_cols, cat_flextable, table_list = maj_det_table_list)

for (x in 1:length(maj_det_cols)) {
  cat(knit_print(maj_det_flex[[x]]))
  }

```

###  Any Positive Votes

For each assessment (initial, secondary, and post-DETECT), at least one LEAD panelist voted 'Yes' for each sub type of abuse. 

<!-- ## Create list of columns to analyze -->

```{r}
#| echo: false
any_pos_cols <- c("physical_abuse_any",  "sexual_abuse_any",  "emotional_psycho_abuse_any",  "neglect_any",  "self_neglect_any",  "financial_exploitation_any", "abandonment_any")
```

<!-- ## Create a data frame that contains summary statistics -->

```{r}
#| echo: false
any_pos_stats_list <- any_pos_cols  |> 
  rlang::set_names(any_pos_cols) |> 
  purrr::map(
      ~ lead_pos_votes |> 
          filter(!is.na(assessment_type_3cat_f)) |> 
          n_percent_ci_grouped(!! rlang::sym(.x), assessment_type_3cat_f, 1)
      )
```

```{r}
#| echo: false
any_pos_table <- purrr::map_dfr(
  # Bind rows together
  .x = any_pos_cols,
  .f = ~ dplyr::bind_rows(any_pos_stats_list[[.x]])
)

# Reorder the columns so that `cat` comes after `var`
any_pos_table <- any_pos_table |> 
  dplyr::select(var, cat, everything())

# Add description column 
any_pos_table <- any_pos_table %>%
  left_join(., lead_desc, by = c("var"))

# Move statistics for each assessment type to its own row
assessments <- c("Initial", "Secondary", "Post-detect")
any_pos_table_long <- data.frame()

for (assessment in assessments) {
  single_type <- any_pos_table %>%
    select(-c(ends_with(" assessment") & !contains(assessment))) %>%
    # Create new column for assessment type
    mutate(
      assessment_type = paste(assessment, "assessment", sep = " ")
    ) %>%
    relocate(assessment_type, .after = cat) %>%
    # Rename columns
    rename(
      "n" = 4,
      "formatted_stats" = 5
    )
  any_pos_table_long <- rbind(any_pos_table_long, single_type) %>%
    arrange(var)
}

any_pos_table <- any_pos_table_long
```

```{r}
#| echo: false
# Split data frame into list of data frames by variable
any_pos_table_list <- split(any_pos_table, any_pos_table$var)

```

```{r, results ='asis', echo=FALSE}
any_pos_flex <- lapply(any_pos_cols, cat_flextable, table_list = any_pos_table_list)

for (x in 1:length(any_pos_cols)) {
  cat(knit_print(any_pos_flex[[x]]))
  }

```

## Download Tables in Word File

```{r}
#| echo: false

# Define title and subtitle styles
title_style <- fp_text_lite(font.size = 18, bold = TRUE)
subtitle_style <- fp_text_lite(font.size = 14, bold = TRUE, color = "#A7A7A7")


#  Create an empty Word document
lead_doc <- read_docx()

lead_doc <- lead_doc %>%
  
  # Add Heading
  body_add_fpar(fpar(ftext("LEAD Panel Assessment Tables", prop = title_style))) %>%
  body_add_par("") %>%
  
  # Add confusion matrix heading and tables
  body_add_fpar(fpar(ftext("Initial MedStar Medic DETECT Tool Abuse Determination vs LEAD Panel Assessment Final Determination", 
                           prop = subtitle_style))) %>%
  body_add_flextable(conf_mat) %>%
  body_add_flextable(conf_calc, align = "left") %>%
  body_add_par("") %>%
  
  # Add Unique MedStar ID heading and summary table
  body_add_fpar(fpar(ftext("Unique Medstar ID Summary", prop = subtitle_style))) %>%
  body_add_flextable(width(unique_case_flextable, width = 2.27, unit = "in"), align = "left") %>%
  body_add_par("")
  
# Add final determination heading and tables  
lead_doc <- lead_doc %>%
  body_add_break() %>%

  # Add Heading
  body_add_fpar(fpar(ftext("Final LEAD Panel Assessment Abuse Determination", prop = subtitle_style))) 

for (var_name in final_det_cols) {
  final_det_flex <- cat_flextable_4(var_name, final_det_table_list)
  # Set width of tables
  final_det_flex <- final_det_flex %>% width(j = c(1,2,3,4), width = c(2, 1.4, 1.4, 2), unit = "in") %>%
    # Remove space for document view
    delete_part(part = "footer") %>%
    # Prevent table breaking up into different pages.
    paginate(init = TRUE, hdr_ftr = TRUE)
  
  # Align tables and add a separating empty line between each table    
  lead_doc <- lead_doc %>%
    body_add_flextable(final_det_flex, align = "left") %>%
    body_add_par("")
}  
  
# Add majority vote heading and tables  
lead_doc <- lead_doc %>%
  body_add_break() %>%

  # Add Heading
  body_add_fpar(fpar(ftext("LEAD Panel Assessment Determination Based on Majority Vote", prop = subtitle_style)))

for (var_name in maj_det_cols) {
  maj_det_flex <- cat_flextable(var_name, maj_det_table_list)
  # Set width of tables
  maj_det_flex <- maj_det_flex %>% width(j = c(1,2,3,4,5), width = c(2, 1, 1.4, 0.7, 1.7), unit = "in") %>%
    # Remove space for document view
    delete_part(part = "footer") %>%
    # Prevent table breaking up into different pages.
    paginate(init = TRUE, hdr_ftr = TRUE)
  
  # Align tables and add a separating empty line between each table    
  lead_doc <- lead_doc %>%
    body_add_flextable(maj_det_flex, align = "left") %>%
    body_add_par("")
  
}  

# Add any positive vote heading and tables  
lead_doc <- lead_doc %>%
  body_add_break() %>%
  
  # Add Heading
  body_add_fpar(fpar(ftext("Any Positive Votes", prop = subtitle_style))) %>%
  body_add_par("")

# Add any_pos table tables into Word document
for (var_name in any_pos_cols) {
  any_pos_flex <- cat_flextable(var_name, any_pos_table_list)
  # Set width of tables
  any_pos_flex <- any_pos_flex %>% width(j = c(1,2,3,4,5), width = c(2, 1, 1.4, 0.7, 1.7), unit = "in") %>%
    # Remove space for document view
    delete_part(part = "footer") %>%
    # Prevent table breaking up into different pages.
    paginate(init = TRUE, hdr_ftr = TRUE)
  
  # Align tables and add a separating empty line between each table    
  lead_doc <- lead_doc %>%
    body_add_flextable(any_pos_flex, align = "left") %>%
    body_add_par("")
    
}
  
  

# print the word document
print(lead_doc, target = "lead_overall.docx")
```


```{r}
#| label: download_docx_example
#| echo: false
 
downloadthis::download_file(
  path = "lead_overall.docx",
  output_name = "LEAD Summarized",
  button_label = "Download table",
  button_type = "success",
  has_icon = TRUE,
  icon = "fa fa-save"
)
```
